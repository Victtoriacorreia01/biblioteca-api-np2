// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/**
 * Deixe o enum em m√∫ltiplas linhas para evitar erro de colagem
 */
enum LoanStatus {
  OPEN
  RETURNED
  LATE
}

model Author {
  id        Int     @id @default(autoincrement())
  name      String
  country   String?
  birthYear Int?
  bio       String?
  books     Book[]
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  books       Book[]
}

model Book {
  id              Int      @id @default(autoincrement())
  title           String
  isbn            String   @unique
  publishedYear   Int
  totalCopies     Int
  availableCopies Int
  authorId        Int
  categoryId      Int
  author          Author   @relation(fields: [authorId], references: [id])
  category        Category @relation(fields: [categoryId], references: [id])
  loans           Loan[]
}

model Member {
  id           Int      @id @default(autoincrement())
  fullName     String
  email        String   @unique
  phone        String
  registeredAt DateTime @default(now())
  isActive     Boolean  @default(true)
  loans        Loan[]
}

model Loan {
  id         Int        @id @default(autoincrement())
  memberId   Int
  bookId     Int
  loanDate   DateTime   @default(now())
  dueDate    DateTime
  returnDate DateTime?
  status     LoanStatus @default(OPEN)
  fineCents  Int        @default(0)
  member     Member     @relation(fields: [memberId], references: [id])
  book       Book       @relation(fields: [bookId], references: [id])
}
